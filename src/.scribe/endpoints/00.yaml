name: 'Task management'
description: |-

  APIs for managing tasks
endpoints:
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{task_id}/complete'
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Set the task status as completed.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Task completed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"message": "Task not completed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found Resource"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fageZvV4b1Pk3ca6d8hE56D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tasks/{task_id}/uncomplete'
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Set the task status as uncompleted.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Task uncompleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"message": "Task not uncompleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found Resource"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6vD6aeZ3fV5bP4dgk8Ehac1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tasks
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of tasks.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter tasks by status.'
        required: false
        example: Completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[creator_id]':
        name: 'filter[creator_id]'
        description: 'Filter tasks by creator ids.'
        required: false
        example: '1,2,5'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      'filter[status]': Completed
      'filter[creator_id]': '1,2,5'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":219,"name":"Voluptatem quis qui perferendis pariatur.","description":"Reiciendis sit doloremque et voluptatibus. Earum doloremque dolor esse iusto quas. Nihil delectus blanditiis vitae sed soluta.","status":"Uncompleted","creatorId":120,"createdAt":"2025-01-26T14:50:57.000000Z","updatedAt":"2025-01-26T14:50:57.000000Z"},{"id":220,"name":"Consequatur ea corrupti tenetur tempore et assumenda debitis praesentium.","description":"Laudantium dolorem quos perspiciatis sit. Officiis ea velit et. Et facilis deleniti enim accusamus aspernatur ab sit voluptate.","status":"Completed","creatorId":121,"createdAt":"2025-01-26T14:50:57.000000Z","updatedAt":"2025-01-26T14:50:57.000000Z"}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer akdPZV6cgf1ED3h5abv8e64'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tasks
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Create task.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: yjccno
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Aut et dolor eos cumque culpa sed ut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: yjccno
      description: 'Aut et dolor eos cumque culpa sed ut.'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"message": "Task successfully created."}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation Failed",
               "errors": {
                   "name": [
                       "The name field is required."
                   ]
               }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Task not created"}'
        headers: []
        description: 'Server error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P34kgdDh68vaEfa1VZb6e5c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single task.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":221,"name":"Et atque dolor aut sint facere.","description":"Dolores omnis quia ea nam nobis et placeat. Pariatur adipisci ipsam recusandae. Nostrum tenetur facere explicabo aliquid. Earum et quasi culpa eligendi quia occaecati nemo.","status":"Uncompleted","creatorId":122,"createdAt":"2025-01-26T14:50:58.000000Z","updatedAt":"2025-01-26T14:50:58.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found Resource"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cv8VZD4d65abh61fkg3EeaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Update task.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: vcaec
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Maxime ratione vero autem ipsum eos.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: Uncompleted
        type: string
        enumValues:
          - Completed
          - Uncompleted
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vcaec
      description: 'Maxime ratione vero autem ipsum eos.'
      status: Uncompleted
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Task successfully updated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found Resource"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation Failed",
               "errors": {
                   "name": [
                       "The name field is required."
                   ]
               }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Task not updated"}'
        headers: []
        description: 'Server error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DZaV86ekb4g35fcP61vhEad'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tasks/{id}'
    metadata:
      groupName: 'Task management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete task.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Task not deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found Resource"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ZaP6a5D36ecVbdkg4hvf1E'
    controller: null
    method: null
    route: null
    custom: []
