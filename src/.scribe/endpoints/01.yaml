name: 'Auth management'
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: colton.labadie@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: string
        required: true
        example: 12QWERTY_3a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      remember:
        name: remember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: colton.labadie@example.org
      password: 12QWERTY_3a
      remember: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "User successfully logged in",
               "token": "1|YGwScKg7jPnZlviC5tGjfSKYy5sFsEsy5odBftn16977e462",
               "userId": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Incorrect credentials"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation Failed",
               "errors": {
                   "email": [
                       "The email field is required."
                   ]
               }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 75 characters.'
        required: true
        example: nbdikincugaovr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jast.gerald@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 12QWERTY_3a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: 12QWERTY_3a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: nbdikincugaovr
      email: jast.gerald@example.net
      password: 12QWERTY_3a
      password_confirmation: 12QWERTY_3a
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "User successfully registered",
               "token": "1|YGwScKg7jPnZlviC5tGjfSKYy5sFsEsy5odBftn16977e462",
               "userId": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation Failed",
               "errors": {
                   "name": [
                       "The name field is required."
                   ],
                   "email": [
                       "The email field is required."
                   ]
               }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Registration failed"}'
        headers: []
        description: 'Server error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "User logged out"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bV5fk4v6ZDdP1ag6aEh8e3c'
    controller: null
    method: null
    route: null
    custom: []
